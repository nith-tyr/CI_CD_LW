name: Docker Image CI

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Choose the appropriate Python version

    - name: Install dependencies
      run: |
        pip install detect-secrets

    - name: Scan for secrets
      run: |
        detect-secrets scan --all-files
    - name: Login to AWS ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESSKEY }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRETACCESSKEY }}
        aws configure set region ${{ secrets.AWS_REGION }}
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNTID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    - name: Get Git SHA
      run: |
        export GIT_SHA=$(git rev-parse --short HEAD)
        echo "Git SHA: $GIT_SHA"
    - name: Build the Docker image
      run: docker buildx build . --file Dockerfile --tag ${{ secrets.AWS_ACCOUNTID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tsbpoc:$GIT_SHA

    - name: Push Docker image to AWS ECR
      run: docker push ${{ secrets.AWS_ACCOUNTID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/tsbpoc:$GIT_SHA

    - name: Qualys Scanning
      run: | 
      env:
        QUALYS_API_TOKEN: ${{ secrets.QUALYS_API_TOKEN }}
    # run: |
    #    oc login --server=<OpenShift Server URL> --token=${{ secrets.OPENSHIFT_API_TOKEN }}
    #    oc project <OpenShift Project Name>
    #    oc set image deployment/<Deployment Name> <Container Name>=sureshsss/java-docker-build-tutorial:${GITHUB_RUN_ID}
