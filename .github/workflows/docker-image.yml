name: Docker Image CI

on:
  push:
    branches: [ "development" ]
  pull_request:
    branches: [ "development" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SYNK_SECRET_ACCESS_KEY}}
    #- name: Build with Maven # Compiling the .war binary from the checked out repo source code to upload to the scanner in the next step
     # run: mvn -B package --file ./pom.xml
          
    #- name: Veracode Upload And Scan
      #uses: veracode/veracode-uploadandscan-action@0.2.6
      #with:
        #appname: 'VeraDemo'
        #filepath: 'app/target/verademo.war'
        #vid: '${{ secrets.API_ID }}'
        #vkey: '${{ secrets.API_KEY }}'
#       createsandbox: 'true'
#       sandboxname: 'SANDBOXNAME'
#       scantimeout: 0
#       exclude: '*.js'
#       include: '*.war'
#       criticality: 'VeryHigh'
    - name: Login to AWS ECR
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESSKEY }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRETACCESSKEY }}
        aws configure set region ${{ secrets.AWS_REGION }}
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNTID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
    - name: Get Git SHA
      run: |
        export GIT_SHA=$(git rev-parse --short HEAD)
        echo "Git SHA: $GIT_SHA"
    - name: Build the Docker image
      run: docker build . -t 966736819776.dkr.ecr.us-east-1.amazonaws.com/tsbpoc

    - name: Push Docker image to AWS ECR
      run: docker push 966736819776.dkr.ecr.us-east-1.amazonaws.com/tsbpoc:latest

    - name: Qualys Scanning
      run: | 
      env:
        QUALYS_API_TOKEN: ${{ secrets.QUALYS_API_TOKEN }}
    # run: |
    #    oc login --server=<OpenShift Server URL> --token=${{ secrets.OPENSHIFT_API_TOKEN }}
    #    oc project <OpenShift Project Name>
    #    oc set image deployment/<Deployment Name> <Container Name>=sureshsss/java-docker-build-tutorial:${GITHUB_RUN_ID}
